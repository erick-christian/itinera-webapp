/*
 * File: app/view/formMaintenance.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('proServices.view.formMaintenance', {
    extend: 'Ext.form.Panel',
    alias: 'widget.formMaintenance',

    requires: [
        'proServices.view.formMaintenanceViewModel',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.toolbar.Fill',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Column',
        'Ext.toolbar.Paging'
    ],

    viewModel: {
        type: 'formmaintenance'
    },
    height: 650,
    id: 'formMaintenance',
    itemId: 'formMaintenance',
    maxHeight: 800,
    maxWidth: 1350,
    ui: 'green-panel',
    width: 1350,
    layout: 'column',
    bodyPadding: 10,
    manageHeight: false,
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            id: 'toolbarMaintenance',
            itemId: 'toolbarMaintenance',
            items: [
                {
                    xtype: 'button',
                    handler: function (button, e) {
                        Ext.getCmp('formMaintenance').showServices();
                    },
                    id: 'btnView',
                    itemId: 'btnView',
                    width: 120,
                    iconCls: 'ion-eye icon16',
                    text: 'View',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function (button, e) {
                        var winServices = Ext.getCmp('winServices');

                        if (!winServices) {
                            winServices = Ext.create('widget.winServices');
                            winServices.show();
                            trex.hideScrollBars();
                        }
                    },
                    id: 'btnCreate',
                    itemId: 'btnCreate',
                    width: 120,
                    iconCls: 'ion-plus-circled icon16',
                    text: 'Create',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function (button, e) {
                        var msgFunction = function () {
                            Ext.getCmp('formMaintenance').deleteServices();

                        };

                        var msgType = 'question';
                        var msgTitle = 'Delete Service';
                        var msgContent = 'Do you want to delete the Service record: ';

                        trex.message(msgType,
                            msgTitle,
                            msgContent,
                            msgFunction);

                        return;
                    },
                    id: 'btnDelete',
                    itemId: 'btnDelete',
                    width: 120,
                    iconCls: 'ion-trash-a icon16',
                    text: 'Delete',
                    textAlign: 'left'
                },
                {
                    xtype: 'tbseparator',
                    width: 30
                },
                {
                    xtype: 'button',
                    id: 'btnFind',
                    itemId: 'btnFind',
                    width: 120,
                    iconCls: 'ion-ios-search-strong icon16',
                    text: 'Find',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    id: 'btnFilter',
                    itemId: 'btnFilter',
                    width: 120,
                    iconCls: 'ion-funnel icon16',
                    text: 'Filter',
                    textAlign: 'left'
                },
                {
                    xtype: 'tbseparator',
                    width: 30
                },
                {
                    xtype: 'tbfill'
                },
                {
                    xtype: 'button',
                    handler: function (button, e) {
                        var winSerDetail = Ext.getCmp('winSerDetail');

                        if (!winSerDetail) {
                            winSerDetail = Ext.create('widget.winSerDetail');
                            winSerDetail.show();
                            trex.hideScrollBars();
                        }
                    },
                    id: 'btnService',
                    itemId: 'btnService',
                    width: 120,
                    iconCls: 'ion-plus-circled icon16',
                    text: 'Service',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    id: 'btnInformation',
                    itemId: 'btnInformation',
                    width: 120,
                    iconCls: 'ion-information-circled icon16',
                    text: 'Information',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function (button, e) {
                        var win = window.parent.Ext.getCmp('proServices');
                        if (win)win[win.closeAction]();
                    },
                    id: 'btnExit',
                    itemId: 'btnExit',
                    width: 120,
                    iconCls: 'ion-android-exit icon16',
                    text: 'Exit',
                    textAlign: 'left'
                }
            ]
        }
    ],
    items: [
        {
            xtype: 'gridpanel',
            id: 'gridServices',
            itemId: 'gridServices',
            maxHeight: 300,
            ui: 'green-panel',
            width: 880,
            title: 'Services',
            columnLines: false,
            forceFit: false,
            store: 'storeServices',
            viewConfig: {
                height: 400,
                maxHeight: 300,
                maxWidth: 1000,
                width: 878
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    id: 'stand_taxi',
                    itemId: 'stand_taxi',
                    maxWidth: 70,
                    width: 70,
                    dataIndex: 'stand_taxi',
                    text: 'Stand </br>Taxi'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'turn',
                    itemId: 'turn',
                    maxWidth: 70,
                    width: 70,
                    dataIndex: 'turn',
                    text: 'Turn'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'car_id',
                    itemId: 'car_id',
                    maxWidth: 80,
                    width: 80,
                    dataIndex: 'date',
                    text: 'Car ID'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'date',
                    itemId: 'date',
                    maxWidth: 100,
                    width: 100,
                    dataIndex: 'date',
                    text: 'Date </br> Hour'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'service_type',
                    itemId: 'service_type',
                    dataIndex: 'service_type',
                    text: 'Service </br> Type'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'taxi_type_fare',
                    itemId: 'taxi_type_fare',
                    dataIndex: 'taxi_type_fare',
                    text: 'Fare </br> Type'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'apointment',
                    itemId: 'apointment',
                    maxWidth: 85,
                    width: 85,
                    dataIndex: 'appointment',
                    text: 'Appointment'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'appointment_date',
                    itemId: 'appointment_date',
                    maxWidth: 90,
                    width: 90,
                    dataIndex: 'appointment_Hour',
                    text: 'Appointment </br> Date'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'appointment_hour',
                    itemId: 'appointment_hour',
                    maxWidth: 90,
                    width: 90,
                    dataIndex: 'appointment_Hour',
                    text: 'Appointment </br> Hour'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'status',
                    itemId: 'status',
                    dataIndex: 'status',
                    text: 'Status'
                }
            ],
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    id: 'pagingToolbar',
                    itemId: 'pagingToolbar',
                    width: 260,
                    displayInfo: true,
                    store: 'storeServices'
                }
            ],
            listeners: {
                itemdblclick: 'onGridServicesItemDblClick',
                itemclick: 'onGridServicesItemClick'
            }
        },
        {
            xtype: 'gridpanel',
            id: 'gridSerDetail',
            itemId: 'gridSerDetail',
            margin: '5 5 5 0',
            maxHeight: 270,
            maxWidth: 1350,
            ui: 'green-panel',
            width: 1350,
            title: 'Detail Service',
            columnLines: false,
            forceFit: false,
            store: 'storeSerDetail',
            viewConfig: {
                height: 400,
                width: 300
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    id: 'num_service',
                    itemId: 'num_service',
                    maxWidth: 80,
                    dataIndex: 'num_service',
                    text: 'Service'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'service_date',
                    itemId: 'service_date',
                    dataIndex: 'service_date',
                    text: 'Savice </br> Date'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'period',
                    itemId: 'period',
                    maxWidth: 80,
                    width: 80,
                    dataIndex: 'period',
                    text: 'Period'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'customer_id',
                    itemId: 'customer_id',
                    dataIndex: 'customer_id',
                    text: 'Customer'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'branch_office',
                    itemId: 'branch_office',
                    dataIndex: 'branch_office',
                    text: 'Branch </br> Office'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'authorizer',
                    itemId: 'authorizer',
                    dataIndex: 'authorizer',
                    text: 'Authorizer'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'sector',
                    itemId: 'sector',
                    dataIndex: 'sector',
                    text: 'Sector'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'zone_end',
                    itemId: 'zone_end',
                    dataIndex: 'zone_end',
                    text: 'Zone'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'appointment',
                    itemId: 'appointment',
                    dataIndex: 'appointment',
                    text: 'Appointment'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'appointment_date2',
                    itemId: 'appointment_date_2',
                    dataIndex: 'appointment_date',
                    text: 'Appointment </br> Date'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'range',
                    itemId: 'range',
                    dataIndex: 'range',
                    text: 'Range'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'time',
                    itemId: 'time',
                    dataIndex: 'time',
                    text: 'Time'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'time_wait',
                    itemId: 'time_wait',
                    dataIndex: 'time_wait',
                    text: 'Time </br> Wait'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'add_costs',
                    itemId: 'add_costs',
                    dataIndex: 'add_cost',
                    text: 'Add </br> Costs'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'taxt',
                    itemId: 'taxt',
                    dataIndex: 'taxt',
                    text: 'Taxt'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'cost',
                    itemId: 'cost',
                    dataIndex: 'cost',
                    text: 'Cost'
                },
                {
                    xtype: 'gridcolumn',
                    id: 'status2',
                    itemId: 'status2',
                    dataIndex: 'total',
                    text: 'Status'
                }
            ],
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    id: 'pagingToolbar2',
                    itemId: 'pagingToolbar2',
                    width: 260,
                    displayInfo: true
                }
            ],
            listeners: {
                itemdblclick: 'onGridSerDetailItemDblClick',
                itemclick: 'onGridSerDetailItemClick'
            }
        }
    ],

    onGridServicesItemDblClick: function (dataview, record, item, index, e, eOpts) {
        Ext.getCmp('formMaintenance').showServices();
    },

    onGridServicesItemClick: function (dataview, record, item, index, e, eOpts) {
        Ext.getCmp('formMaintenance').ServicesID = record.data.id;
        Ext.getCmp('formMaintenance').ServicesRecord = record.data;
    },

    onGridSerDetailItemDblClick: function (dataview, record, item, index, e, eOpts) {
        Ext.getCmp('formMaintenance').showSerDetail();
    },

    onGridSerDetailItemClick: function (dataview, record, item, index, e, eOpts) {
        Ext.getCmp('formMaintenance').UserSerDetailID = record.data.id;
        Ext.getCmp('formMaintenance').UserSerDetailRecord = record.data;
    },

    showServices: function (pMode) {
        var apiController = 'apiServices';
        var apiMethod = 'showServices';
        var objJsonData = new Object();
        objJsonData.ServicesID = Ext.getCmp('formMaintenance').ServicesID;

        var objJsonRequest = new Object();
        objJsonRequest.apiController = apiController;
        objJsonRequest.apiMethod = apiMethod;
        objJsonRequest.apiData = JSON.stringify(objJsonData);

        var functionSuccess = function () {
            var jsonData = trex.getInfoDataBridge(apiController);


            var winServices = Ext.getCmp('winServices');

            if (!winServices) {
                winServices = Ext.create('widget.winServices');
                winServices.show();
                trex.hideScrollBars();
            }

            trex.showRecord(jsonData, 'services');

        };

        var functionFailure = function () {
            var jsonData = trex.getInfoDataBridge(apiController);
        };

        trex.doDataBridge(objJsonRequest,
            functionSuccess,
            null,
            functionFailure,
            null);


    },

    deleteServices: function () {
        alert('registro borrado');

        var formRecord = 'formServices';
        var apiController = 'apiServices';
        var apiMethod = 'deleteServices';

        var objJsonData = new Object();
        objJsonData.ServicesId = Ext.getCmp('formMaintenance').ServicesRecord.id;

        var objJsonRequest = new Object();
        objJsonRequest.apiController = apiController;
        objJsonRequest.apiMethod = apiMethod;
        objJsonRequest.apiData = JSON.stringify(objJsonData);

        var functionSuccess = function () {
            var jsonData = trex.getInfoDataBridge(apiController);

            console.log(jsonData);
            trex.showInfo(jsonData, 'info');

        };

        var functionFailure = function () {
            var jsonData = trex.getInfoDataBridge(apiController);
            trex.showInfo(jsonData, 'error', 'tfCompany');
        };

        trex.doDataBridge(objJsonRequest,
            functionSuccess,
            null,
            functionFailure,
            null);
    }

});