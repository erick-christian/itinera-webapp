/*
 * File: app/store/storeUserCar.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('catCar.store.storeUserCar', {
    extend: 'Ext.data.Store',

    requires: [
        'catCar.model.modUserCar',
        'Ext.data.proxy.Rest',
        'Ext.data.reader.Json'
    ],

    constructor: function (cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'storeUserCar',
            model: 'catCar.model.modUserCar',
            proxy: {
                type: 'rest',
                url: '',
                reader: {
                    type: 'json',
                    rootProperty: 'userCars',
                    totalProperty: 'numUserCars.total'
                }
            },
            listeners: {
                beforeload: {
                    fn: me.onStoreBeforeLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onStoreBeforeLoad: function (store, operation, eOpts) {
        var storeUserCar = Ext.getStore('storeUserCar');
        var proxySector = storeUserCar.getProxy();

        var objJsonData = new Object();
        objJsonData.page = storeUserCar.currentPage;
        objJsonData.start = (storeUserCar.currentPage - 1) * storeUserCar.pageSize;
        objJsonData.limit = storeUserCar.pageSize;

        var objJsonRequest = new Object();
        objJsonRequest.apiController = 'apiUserCar';
        objJsonRequest.apiMethod = 'listUserCar';
        objJsonRequest.apiData = JSON.stringify(objJsonData);

        proxySector.api.read = '../../backend/public/dataBridge/' + objJsonRequest.apiController;
        proxySector.extraParams = objJsonRequest;

    }

});