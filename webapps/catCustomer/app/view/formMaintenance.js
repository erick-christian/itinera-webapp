/*
 * File: app/view/formMaintenance.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('catCustomer.view.formMaintenance', {
    extend: 'Ext.form.Panel',
    alias: 'widget.formMaintenance',

    requires: [
        'catCustomer.view.formMaintenanceViewModel',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.toolbar.Fill',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Column',
        'Ext.toolbar.Paging'
    ],

    viewModel: {
        type: 'formmaintenance'
    },
    id: 'formMaintenance',
    itemId: 'formMaintenance',
    ui: 'green-panel',
    layout: 'fit',
    bodyPadding: 10,
    manageHeight: false,
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            id: 'toolbarMaintenance',
            itemId: 'toolbarMaintenance',
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        Ext.getCmp('formMaintenance').showCustomer();
                    },
                    id: 'btnView',
                    itemId: 'btnView',
                    width: 120,
                    iconCls: 'ion-eye icon16',
                    text: 'View',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        var winCustomer = Ext.getCmp('winCustomer');

                        if(!winCustomer){
                            winCustomer = Ext.create('widget.winCustomer');
                            winCustomer.show();
                            trex.hideScrollBars();
                        }
                    },
                    id: 'btnCreate',
                    itemId: 'btnCreate',
                    width: 120,
                    iconCls: 'ion-plus-circled icon16',
                    text: 'Create',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        Ext.getCmp('formMaintenance').showCustomer('edit');
                    },
                    id: 'btnUpdate',
                    itemId: 'btnUpdate',
                    width: 120,
                    iconCls: 'ion-edit icon16',
                    text: 'Update',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        var msgFunction = function(){
                            Ext.getCmp('formMaintenance').deleteCustomer();

                        };

                        var msgType = 'question';
                        var msgTitle = 'Delete Customer';
                        var msgContent = 'Do you want to delete the Customer record: ';

                        trex.message(msgType,
                        msgTitle,
                        msgContent,
                        msgFunction);

                        return;
                    },
                    id: 'btnDelete',
                    itemId: 'btnDelete',
                    width: 120,
                    iconCls: 'ion-trash-a icon16',
                    text: 'Delete',
                    textAlign: 'left'
                },
                {
                    xtype: 'tbseparator',
                    width: 30
                },
                {
                    xtype: 'button',
                    id: 'btnFind',
                    itemId: 'btnFind',
                    width: 120,
                    iconCls: 'ion-ios-search-strong icon16',
                    text: 'Find',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    id: 'btnFilter',
                    itemId: 'btnFilter',
                    width: 120,
                    iconCls: 'ion-funnel icon16',
                    text: 'Filter',
                    textAlign: 'left'
                },
                {
                    xtype: 'tbseparator',
                    width: 30
                },
                {
                    xtype: 'tbfill'
                },
                {
                    xtype: 'button',
                    id: 'btnInformation',
                    itemId: 'btnInformation',
                    width: 120,
                    iconCls: 'ion-information-circled icon16',
                    text: 'Information',
                    textAlign: 'left'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        var win = window.parent.Ext.getCmp('catCustomer');
                        if(win)win[win.closeAction]();
                    },
                    id: 'btnExit',
                    itemId: 'btnExit',
                    width: 120,
                    iconCls: 'ion-android-exit icon16',
                    text: 'Exit',
                    textAlign: 'left'
                }
            ]
        }
    ],
    items: [
        {
            xtype: 'gridpanel',
            id: 'gridCustomers',
            itemId: 'gridCustomers',
            ui: 'green-panel',
            title: 'Customers',
            forceFit: true,
            store: 'storeCustomer',
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'short_name',
                    text: 'Short Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'company',
                    text: 'Company'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'tax_id',
                    text: 'Tax Id'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'contact_name',
                    text: 'Contact Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'contact_phone',
                    text: 'Contact Phone'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'email',
                    text: 'Email'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'website',
                    text: 'Website'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'active',
                    text: 'Active'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'latitude',
                    text: 'Latitude'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'longitude',
                    text: 'Longitude'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'geocode_url',
                    text: 'Geocode Url'
                }
            ],
            dockedItems: [
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    id: 'pagingToolbar',
                    itemId: 'pagingToolbar',
                    width: 360,
                    displayInfo: true,
                    store: 'storeCustomer'
                }
            ],
            listeners: {
                itemdblclick: 'onGridCustomersItemDblClick',
                itemclick: 'onGridCustomersItemClick'
            }
        }
    ],

    onGridCustomersItemDblClick: function(dataview, record, item, index, e, eOpts) {
        Ext.getCmp('formMaintenance').showCustomer();
    },

    onGridCustomersItemClick: function(dataview, record, item, index, e, eOpts) {
        Ext.getCmp('formMaintenance').CustomerID = record.data.id;
        Ext.getCmp('formMaintenance').CustomerRecord = record.data;
    },

    showCustomer: function(pMode) {
        var apiController = 'apiCustomer';
        var apiMethod     = 'showCustomer';
        var objJsonData = new Object();
        objJsonData.CustomerID    = Ext.getCmp('formMaintenance').CustomerID;

        var objJsonRequest = new Object();
        objJsonRequest.apiController = apiController;
        objJsonRequest.apiMethod     = apiMethod;
        objJsonRequest.apiData       = JSON.stringify(objJsonData);

        var functionSuccess = function(){
            var jsonData = trex.getInfoDataBridge(apiController);


            var winCustomer = Ext.getCmp('winCustomer');

            if(!winCustomer){
                winCustomer = Ext.create('widget.winCustomer');
                winCustomer.show();
                trex.hideScrollBars();
            }

            trex.showRecord(jsonData,'customers');

        };

        var functionFailure = function(){
            var jsonData = trex.getInfoDataBridge(apiController);
        };

        trex.doDataBridge(objJsonRequest,
                          functionSuccess,
                          null,
                          functionFailure,
                          null);


    },

    deleteCustomer: function() {
        alert('regisdtro borrado');

        var formRecord    = 'formCustomer';
        var apiController = 'apiCustomer';
        var apiMethod     = 'deleteCustomer';

        var objJsonData = new Object();
        objJsonData.customerId    = Ext.getCmp('formMaintenance').CustomerRecord.id;

        var objJsonRequest = new Object();
        objJsonRequest.apiController = apiController;
        objJsonRequest.apiMethod     = apiMethod;
        objJsonRequest.apiData       = JSON.stringify(objJsonData);

        var functionSuccess = function(){
            var jsonData = trex.getInfoDataBridge(apiController);

            console.log(jsonData);
            trex.showInfo(jsonData, 'info');

        };

        var functionFailure = function(){
            var jsonData = trex.getInfoDataBridge(apiController);
            trex.showInfo(jsonData, 'error', 'tfCompany');
        };

        trex.doDataBridge(objJsonRequest,
                          functionSuccess,
                          null,
                          functionFailure,
                          null);
    }

});